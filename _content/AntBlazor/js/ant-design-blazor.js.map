{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","core/JsInterop/interop.ts","main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","getDom","element","document","querySelector","body","getDomInfo","result","dom","key","item","isNaN","getBoundingClientRect","addDomEventListener","eventName","invoker","callback","args","invokeMethodAsync","window","addEventListener","antMatchMedia","query","matchMedia","matches","copy","text","_this","this","Promise","resolve","reject","copyTextArea","createElement","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","appendChild","value","select","execCommand","removeChild","log","console","interop","antBlazor"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,gBCAC,SAAgBK,EAAOC,GAMpB,OALKA,EAEyB,iBAAZA,IACdA,EAAUC,SAASC,cAAcF,IAFjCA,EAAUC,SAASE,KAIhBH,mDANVN,EAAAK,OAAAA,EASDL,EAAAU,WAAA,SAA2BJ,GACvB,IAAIK,EAAS,GAETC,EAAMP,EAAOC,GAEjB,IAAK,IAAIO,KAAOD,EAAK,CACjB,IAAIE,EAAOF,EAAIC,GACVC,IACe,iBAATA,IAAsC,iBAATA,GAAsBC,MAAMD,MAAQH,EAAOE,GAAOC,IAG9F,OAAOH,GAGXX,EAAAgB,sBAAA,SAAsCV,GAElC,OADUD,EAAOC,GACNU,yBAGfhB,EAAAiB,oBAAA,SAAoCX,EAASY,EAAWC,GACrC,SAAXC,EAAWC,GACXF,EAAQG,kBAAkB,SAAUD,GAGxC,GAAe,UAAXf,EACAiB,OAAOC,iBAAiBN,EAAWE,OAChC,CACH,IAAIR,EAAMP,EAAOC,GAChBC,SAASC,cAAcI,GAAqBY,iBAAiBN,EAAWE,KAIjFpB,EAAAyB,cAAA,SAA8BC,GAC1B,OAAOH,OAAOI,WAAWD,GAAOE,SAGpC5B,EAAA6B,KAAA,SAAqBC,GAAI,IAAAC,EAAAC,KACrB,OAAO,IAAIC,QAAa,SAACC,EAASC,GAC9B,IAAIC,EAAe,KACnB,KACIA,EAAeL,EAAKxB,SAAS8B,cAAc,aAC9BC,MAAMC,IAAM,QACzBH,EAAaE,MAAME,SAAW,QAC9BJ,EAAaE,MAAMG,IAAM,IACzBL,EAAaE,MAAMI,KAAO,mBAC1BN,EAAaE,MAAMK,WAAa,MAChCP,EAAaE,MAAMM,iBAAmB,OACtCR,EAAaE,MAAMO,cAAgB,OACnCT,EAAaE,MAAMQ,aAAe,OAClCV,EAAaE,MAAMS,WAAa,OAChChB,EAAKxB,SAASE,KAAKuC,YAAYZ,GAC/BA,EAAaa,MAAQnB,EACrBM,EAAac,SAEMnB,EAAKxB,SAAS4C,YAAY,SAEzChB,EAAOL,GAEXI,EAAQJ,GAnBZ,QAqBQM,GACAL,EAAKxB,SAASE,KAAK2C,YAAYhB,OAM/CpC,EAAAqD,IAAA,SAAoBvB,GAChBwB,QAAQD,IAAIvB,0FC7Ef,IAAAyB,EAAA7D,EAAA,4BAMD6B,OAAOiC,UAAY,CACjBD,QAAAA","file":"ant-design-blazor.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","﻿export function getDom(element) {\n    if (!element) {\n        element = document.body;\n    } else if (typeof element === 'string') {\n        element = document.querySelector(element);\n    }\n    return element;\n}\n\nexport function getDomInfo(element) {\n    var result = {};\n\n    var dom = getDom(element);\n\n    for (var key in dom) {\n        var item = dom[key];\n        if (!item) continue;\n        if (typeof item === 'string' || (typeof item === 'number' && !isNaN(item))) result[key] = item;\n    }\n\n    return result;\n}\n\nexport function getBoundingClientRect(element) {\n    let dom = getDom(element);\n    return dom.getBoundingClientRect();\n}\n\nexport function addDomEventListener(element, eventName, invoker) {\n    let callback = args => {\n        invoker.invokeMethodAsync('Invoke', args);\n    };\n\n    if (element == 'window') {\n        window.addEventListener(eventName, callback);\n    } else {\n        let dom = getDom(element);\n        (document.querySelector(dom) as HTMLElement).addEventListener(eventName, callback);\n    }\n}\n\nexport function antMatchMedia(query) {\n    return window.matchMedia(query).matches;\n}\n\nexport function copy(text): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n        let copyTextArea = null;\n        try {\n            copyTextArea = this.document.createElement('textarea');\n            copyTextArea.style.all = 'unset';\n            copyTextArea.style.position = 'fixed';\n            copyTextArea.style.top = '0';\n            copyTextArea.style.clip = 'rect(0, 0, 0, 0)';\n            copyTextArea.style.whiteSpace = 'pre';\n            copyTextArea.style.webkitUserSelect = 'text';\n            copyTextArea.style.MozUserSelect = 'text';\n            copyTextArea.style.msUserSelect = 'text';\n            copyTextArea.style.userSelect = 'text';\n            this.document.body.appendChild(copyTextArea);\n            copyTextArea.value = text;\n            copyTextArea.select();\n\n            const successful = this.document.execCommand('copy');\n            if (!successful) {\n                reject(text);\n            }\n            resolve(text);\n        } finally {\n            if (copyTextArea) {\n                this.document.body.removeChild(copyTextArea);\n            }\n        }\n    });\n}\n\nexport function log(text) {\n    console.log(text);\n}\n","﻿import * as interop from './core/JsInterop/interop'\n\ndeclare global {\n  interface Window { antBlazor: any; }\n}\n\nwindow.antBlazor = {\n  interop\n}"]}